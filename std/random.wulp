#intrinsic
l_random_uniform: fn() -> num
#lua #"local l_random_uniform = math.random"#

#intrinsic
l_random_int: fn(int) -> int
#lua #"local l_random_int = math.random"#

#intrinsic
l_random_seed: fn(int) -> ()
#lua #"local l_random_seed = math.randomseed"#

fn uniform() {
	return l_random_uniform()
}

fn integer(n) {
	return l_random_int(n) - 1
}

fn seed(n) {
	l_random_seed(n)
}
