struct Point {
	x: int
	y: int
}

fn Point.__eq(self, other: self) -> bool {
	return self.x == other.x and self.y == other.y
}

fn Point.to_str(self) -> str {
	return "Point(" .. self.x.to_str() .. ", " .. self.y.to_str() .. ")"
}

fn Point.__add(self, other: self) -> self {
	return Point(x = self.x + other.x, y = self.y + other.y)
}

fn main() {
	let a = [1,2,3]
	let b = [1,2,3]
	assert(a == b)
	assert(a.__eq(b))

	let b = [4,5,6]

	assert(a .. b == [1,2,3,4,5,6])
	assert(a != b)

	let a = Point(x=1, y=3)
	let b = Point(x=1, y=3)
	assert(a == b)
	assert(a.__eq(b))

	assert(a.to_str() == b.to_str())
	assert(a.to_str() == "Point(1, 3)")

	assert((a+b).to_str() == "Point(2, 6)")
	a += b
	assert(a.to_str() == "Point(2, 6)")
}


